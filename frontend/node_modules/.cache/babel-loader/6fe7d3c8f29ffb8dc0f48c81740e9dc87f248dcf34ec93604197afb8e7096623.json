{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gharg\\\\Desktop\\\\Hello World\\\\Roxiler\\\\mern-stack-challenge\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport TransactionTable from './components/TransactionTable';\nimport Statistics from './components/Statistics';\nimport BarChart from './components/BarChart';\nimport PieChart from './components/PieChart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [selectedMonth, setSelectedMonth] = useState('March');\n  const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"MERN Stack Challenge\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedMonth,\n      onChange: e => setSelectedMonth(e.target.value),\n      children: months.map(month => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: month,\n        children: month\n      }, month, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TransactionTable, {\n      selectedMonth: selectedMonth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      selectedMonth: selectedMonth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BarChart, {\n      selectedMonth: selectedMonth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PieChart, {\n      selectedMonth: selectedMonth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"oPTaXO0qNvt3ng0OvRzNltlNvZ4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","TransactionTable","Statistics","BarChart","PieChart","jsxDEV","_jsxDEV","App","_s","selectedMonth","setSelectedMonth","months","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","map","month","_c","$RefreshReg$"],"sources":["C:/Users/gharg/Desktop/Hello World/Roxiler/mern-stack-challenge/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport TransactionTable from './components/TransactionTable';\nimport Statistics from './components/Statistics';\nimport BarChart from './components/BarChart';\nimport PieChart from './components/PieChart';\n\nconst App = () => {\n  const [selectedMonth, setSelectedMonth] = useState('March');\n\n  const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n\n  return (\n    <div className=\"App\">\n      <h1>MERN Stack Challenge</h1>\n      <select value={selectedMonth} onChange={(e) => setSelectedMonth(e.target.value)}>\n        {months.map((month) => (\n          <option key={month} value={month}>\n            {month}\n          </option>\n        ))}\n      </select>\n\n      <TransactionTable selectedMonth={selectedMonth} />\n      <Statistics selectedMonth={selectedMonth} />\n      <BarChart selectedMonth={selectedMonth} />\n      <PieChart selectedMonth={selectedMonth} />\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,gBAAgB,MAAM,+BAA+B;AAC5D,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,QAAQ,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGV,QAAQ,CAAC,OAAO,CAAC;EAE3D,MAAMW,MAAM,GAAG,CAAC,SAAS,EAAE,UAAU,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,WAAW,EAAE,SAAS,EAAE,UAAU,EAAE,UAAU,CAAC;EAEzI,oBACEL,OAAA;IAAKM,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBP,OAAA;MAAAO,QAAA,EAAI;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC7BX,OAAA;MAAQY,KAAK,EAAET,aAAc;MAACU,QAAQ,EAAGC,CAAC,IAAKV,gBAAgB,CAACU,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAAAL,QAAA,EAC7EF,MAAM,CAACW,GAAG,CAAEC,KAAK,iBAChBjB,OAAA;QAAoBY,KAAK,EAAEK,KAAM;QAAAV,QAAA,EAC9BU;MAAK,GADKA,KAAK;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACT;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC,eAETX,OAAA,CAACL,gBAAgB;MAACQ,aAAa,EAAEA;IAAc;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClDX,OAAA,CAACJ,UAAU;MAACO,aAAa,EAAEA;IAAc;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC5CX,OAAA,CAACH,QAAQ;MAACM,aAAa,EAAEA;IAAc;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC1CX,OAAA,CAACF,QAAQ;MAACK,aAAa,EAAEA;IAAc;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvC,CAAC;AAEV,CAAC;AAACT,EAAA,CAtBID,GAAG;AAAAiB,EAAA,GAAHjB,GAAG;AAwBT,eAAeA,GAAG;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}