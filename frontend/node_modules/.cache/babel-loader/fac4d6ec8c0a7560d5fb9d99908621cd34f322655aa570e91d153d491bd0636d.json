{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gharg\\\\Desktop\\\\roxiler\\\\frontend\\\\src\\\\components\\\\PriceRangeBarChart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { BarChart, Bar, XAxis, YAxis, Tooltip, CartesianGrid, ResponsiveContainer } from 'recharts';\nimport axios from 'axios';\nimport './styles/PriceRangeBarChart.css';\nimport { Box, Typography, CircularProgress } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PriceRangeBarChart = ({\n  month\n}) => {\n  _s();\n  const [barData, setBarData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    const fetchBarChartData = async () => {\n      setLoading(true);\n      try {\n        const response = await axios.get(`/api/bar-chart`, {\n          params: {\n            month\n          }\n        });\n        const formattedData = Object.keys(response.data).map(range => ({\n          range,\n          count: response.data[range]\n        }));\n        setBarData(formattedData);\n      } catch (error) {\n        console.error(\"Error fetching bar chart data\", error);\n      }\n      setLoading(false);\n    };\n    fetchBarChartData();\n  }, [month]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: \"bar-chart-container\",\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      children: \"Price Range Distribution\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 18\n    }, this) : /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: 300,\n      children: /*#__PURE__*/_jsxDEV(BarChart, {\n        data: barData,\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"range\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Bar, {\n          dataKey: \"count\",\n          fill: \"#8884d8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(PriceRangeBarChart, \"/kkPZwydWuhhb+Gif3mc+O1frUk=\");\n_c = PriceRangeBarChart;\nexport default PriceRangeBarChart;\nvar _c;\n$RefreshReg$(_c, \"PriceRangeBarChart\");","map":{"version":3,"names":["React","useEffect","useState","BarChart","Bar","XAxis","YAxis","Tooltip","CartesianGrid","ResponsiveContainer","axios","Box","Typography","CircularProgress","jsxDEV","_jsxDEV","PriceRangeBarChart","month","_s","barData","setBarData","loading","setLoading","fetchBarChartData","response","get","params","formattedData","Object","keys","data","map","range","count","error","console","className","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","width","height","strokeDasharray","dataKey","fill","_c","$RefreshReg$"],"sources":["C:/Users/gharg/Desktop/roxiler/frontend/src/components/PriceRangeBarChart.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { BarChart, Bar, XAxis, YAxis, Tooltip, CartesianGrid, ResponsiveContainer } from 'recharts';\r\nimport axios from 'axios';\r\nimport './styles/PriceRangeBarChart.css';\r\nimport { Box, Typography, CircularProgress } from '@mui/material';\r\n\r\nconst PriceRangeBarChart = ({ month }) => {\r\n  const [barData, setBarData] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchBarChartData = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const response = await axios.get(`/api/bar-chart`, { params: { month } });\r\n        const formattedData = Object.keys(response.data).map(range => ({\r\n          range,\r\n          count: response.data[range]\r\n        }));\r\n        setBarData(formattedData);\r\n      } catch (error) {\r\n        console.error(\"Error fetching bar chart data\", error);\r\n      }\r\n      setLoading(false);\r\n    };\r\n\r\n    fetchBarChartData();\r\n  }, [month]);\r\n\r\n  return (\r\n    <Box className=\"bar-chart-container\">\r\n      <Typography variant=\"h6\">Price Range Distribution</Typography>\r\n      {loading ? <CircularProgress /> : (\r\n        <ResponsiveContainer width=\"100%\" height={300}>\r\n          <BarChart data={barData}>\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis dataKey=\"range\" />\r\n            <YAxis />\r\n            <Tooltip />\r\n            <Bar dataKey=\"count\" fill=\"#8884d8\" />\r\n          </BarChart>\r\n        </ResponsiveContainer>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default PriceRangeBarChart;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}